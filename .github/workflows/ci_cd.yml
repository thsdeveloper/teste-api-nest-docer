name: Build, Push, and Deploy Docker image to Google Cloud Run

on:
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: us.gcr.io
  IMAGE_NAME: flashinvesting/flash

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure docker for Google Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flash-repositorio/flash-investing-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Cloud Run
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          SERVICE_NAME: flash-investing-api
          IMAGE: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flash-repositorio/flash-investing-api:latest
        run: |
          gcloud config set project $PROJECT_ID
          gcloud run deploy $SERVICE_NAME \
            --image $IMAGE \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL }}